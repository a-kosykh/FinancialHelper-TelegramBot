version: '3.9'
services:
  postgres:
    container_name: postgres_container
    image: postgres
    environment: 
      POSTGRES_DB: "telegram-bot-db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "admin"
      PG_DATA: /data/postgres
    ports:
      - "5432:5432"
    volumes:
       - postgres:/data/postgres
    networks:
      - postgres
    restart: unless-stopped
  
  goose:
    build:
      context: .
      dockerfile: migrations.Dockerfile
    network_mode: "host"
    depends_on:
      - "postgres"
    command: ["./wait-for-it/wait-for-it.sh", "postgres:5432", "--", "sh", "/app/goose_migrations_up.sh"]

  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"

  pg_admin:
    container_name: pgadmin_container
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - postgres
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:1.18
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686 # web
      - 14268:14268
      - 9411:9411

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./internal/metrics/prometheus.yml:/etc/prometheus/prometheus.yml
    extra_hosts:
      - host.docker.internal:host-gateway

  grafana:
    image: grafana/grafana-oss:latest
    ports:
      - 3000:3000
    volumes:
      - ./data:/var/lib/grafana
    links:
      - prometheus
    user: "1000"

  kafka:
    image: wurstmeister/kafka
    hostname: kafka
    ports:
      - "9092:9092"
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "127.0.0.1"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CREATE_TOPICS: "report-topic:2:1"
    depends_on:
      - zookeeper
    container_name: example-kafka
  
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    container_name: example-zookeeper



volumes:
    postgres:
    pgadmin:

networks:
  postgres:
    driver: bridge